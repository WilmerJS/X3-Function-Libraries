# ================================================================================================ #
#
#   AKTIEBOLAGET SYSTEMSTÖD SVERIGE
#
#     Wilmer Jensen Sternehäll
#     wilmer.sternehall@systemstod.se
#
#   ---
#     Name:
#       XSS_SORDER
#     Description:
#       A Systemstöd function library script containing custom Sage X3 functions developed
#       in a general, comprehensive manner meant to fit any Sage X3 installation.
#
#       The functions in this file are related to SALES ORDER MANAGEMENT.
#
#
#
#   Copyright @ 2018 - 2020, Aktiebolaget Systemstöd Sverige
#
#
# ================================================================================================ #

##############################################################################################################
# < WIST >
#**
#* Returns the last (highest) expected delivery date found on the lines of an order.
#*
#* @param ORDER_NUM Order number
#*
#* @return The last delivery date
#*!
Funprog GET_LAST_DELIVERY_DATE_ON_ORDER(ORDER_NUM)
Value Char ORDER_NUM

  Local File SORDERQ  [YSOQ]
  Filter [YSOQ] Where [YSOQ]SOHNUM = ORDER_NUM

  Local Date MAX_DATE

  For [YSOQ]
    MAX_DATE = max(MAX_DATE, [YSOQ]EXTDLVDAT)
  Next

End MAX_DATE

##############################################################################################################
# < WIST >
#**
#* Returns the first (lowest) expected delivery date found on the lines of an order.
#*
#* @param ORDER_NUM Order number
#*
#* @return The last delivery date
#*!
Funprog GET_FIRST_DELIVERY_DATE_ON_ORDER(ORDER_NUM)
Value Char ORDER_NUM

  Local File SORDERQ  [YSOQ]
  Filter [YSOQ] Where [YSOQ]SOHNUM = ORDER_NUM

  Local Date MIN_DATE

  For [YSOQ]
    MIN_DATE = func XSS_VARIABLES.IS_NULL(min(MIN_DATE, [YSOQ]EXTDLVDAT), [YSOQ]EXTDLVDAT)
  Next

End MIN_DATE

##############################################################################################################
# < WIST >
#**
#* Populates an array with the order numbers of all open sales orders with one or more lines
#* concerning a specific item.
#*
#* @param ORDERS Array to populate
#* @param ITEM Item to search for
#*
#*!
Subprog GET_OPEN_SORDERS_BY_ITEM(ORDERS, ITEM)
Variable Char ORDERS
Value Char ITEM

  Local File SORDERQ [YSOQ]
  Filter [YSOQ] Where [YSOQ]SOQSTA < 3 and [YSOQ]ITMREF = ITEM

  While rowcount([YSOQ]) > 0

    Read [YSOQ] First
    ORDERS(maxtab(ORDERS)+1) = [YSOQ]SOHNUM

    Filter [YSOQ] Where [YSOQ]SOQSTA < 3 and [YSOQ]ITMREF = ITEM and !find([YSOQ]SOHNUM, ORDERS)

  Wend

End











# DEBUG MESSAGES IN FUNCTION BELOW

###############################################################################################################
## < WIST >
##**
##* Gets the first date an order line can be delivered, by returning the first date that the expected stock
##* quantity can satisfy this order line.
##* <pre></pre>
##*
##* This functions takes into account lines with the same requested delivery date from all orders,
##* and prioritizes the ones with a <b>lower order number</b>.
##* <pre></pre>
##*
##* @param ORDER_NUM Order number
##* @param LINE Order line
##* @param SEQUENCE Order line sequence
##*
##* @return The first expected delivery date
##*!
#Funprog GET_ORDER_LINE_DELIVERABLE_DATE(ORDER_NUM, LINE, SEQUENCE)
#Value Char ORDER_NUM
#Value Integer LINE
#Value Integer SEQUENCE
#
#  If clalev([YSOQ])=0 : Local File SORDERQ [YSOQ] : Endif
#
#  Read [YSOQ]SOQ0 = ORDER_NUM ; LINE ; SEQUENCE
#
#  Local Date CUSTOMER_REQUEST_DATE    # customers requested date OR today, whichever is largest
#  Local Date LEADTIME_LIMIT           # lead time limit
#  Local Date DELIVERY_DATE            # the final delivery date
#  Local Date CHECK_DATE               # variable to check whether dates are OK to deliver on
#  Local Date EARLIEST_DATE_TO_CHECK   # don't check earlier than this date. (first incoming purchase order)
#
#  LEADTIME_LIMIT          = func XSS_STOCK.GET_THEORETICAL_LEADTIME_LIMIT([YSOQ]STOFCY, [YSOQ]ITMREF)
#  DELIVERY_DATE           = LEADTIME_LIMIT  # start here, then check if we can deliver earlier
#  CHECK_DATE              = LEADTIME_LIMIT  # lead time date won't actually be checked, CHECK_DATE is reassigned before first check
#  EARLIEST_DATE_TO_CHECK  = date$
#
#  Repeat
#
#    CHECK_DATE = max(EARLIEST_DATE_TO_CHECK, func XSS_PORDER.GET_LAST_RECEIPT_DATE_BY_ITEM([YSOQ]STOFCY, [YSOQ]ITMREF, CHECK_DATE - 1))
#
##    If [V]GUSER = "ADMIN"
##    Infbox "CHECKING IF ORDER: " + ORDER_NUM + ", LINE: " + num$(LINE),
##&          "CAN BE DELIVERED AT: " + num$(CHECK_DATE)
##    Endif
#
#    If (func IS_ORDER_LINE_DELIVERABLE_AT_DATE(ORDER_NUM, LINE, SEQUENCE, CHECK_DATE))
#      DELIVERY_DATE = CHECK_DATE
##      If [V]GUSER = "ADMIN"
##        Infbox "CHECKING IF ORDER: " + ORDER_NUM + ", LINE: " + num$(LINE),
##&              "CAN BE DELIVERED AT: " + num$(CHECK_DATE),
##&              "",
##&              "Delivery date OK"
##      Endif
#    Else
##      If [V]GUSER = "ADMIN"
##        Infbox "CHECKING IF ORDER: " + ORDER_NUM + ", LINE: " + num$(LINE),
##&              "CAN BE DELIVERED AT: " + num$(CHECK_DATE),
##&              "",
##&              "Delivery date NOT OK"
##      Endif
#      Break
#    Endif
#
#  Until CHECK_DATE = EARLIEST_DATE_TO_CHECK
#
##  If [V]GUSER = "ADMIN"
##  Infbox "ORDER: " + ORDER_NUM + ", LINE: " + num$(LINE),
##&        "Delivery date: " + num$(DELIVERY_DATE)
##  Endif
#
#End DELIVERY_DATE

